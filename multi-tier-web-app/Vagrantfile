# encoding: utf-8
# -*- mode: ruby -*-
# vi: set ft=ruby :

def set_hostname(server)
  server.vm.provision 'shell', inline: "hostname #{server.vm.hostname}"
end

Vagrant.configure(2) do |config|
  config.ssh.private_key_path = "C:/Users/vishnuch/.vagrant.d/insecure_private_key"
  config.ssh.forward_agent = true
  config.ssh.insert_key = false
  config.ssh.username = "vagrant"
  config.ssh.password = "vagrant"
  #HA Proxy
  config.vm.define 'node-haproxy' do |m|
    m.vm.box = 'bento/centos-7.2'
    m.vm.hostname = 'haproxy'
    m.vm.network 'private_network', ip: '10.1.1.30'
    m.vm.network :forwarded_port, guest: 80, host: 8082
    m.vm.network :forwarded_port, guest: 22, host: 2222
    m.vm.provision :shell, inline: NODE_SCRIPT.dup
    set_hostname(m)
  end
  #HTTP Server
  config.vm.define 'node-web-server' do |n|
    n.vm.box = 'bento/centos-7.2'
    n.vm.hostname = 'web-server'
    n.vm.network 'private_network', ip: '10.1.1.31'
    n.vm.network :forwarded_port, guest: 80, host: 8084
    n.vm.network :forwarded_port, guest: 22, host: 2224
    n.vm.provision :shell, inline: NODE_SCRIPT.dup
    set_hostname(n)
  end
  #Application Server
  config.vm.define 'node-app-server' do |o|
    o.vm.box = 'bento/centos-7.2'
    o.vm.hostname = 'app-server'
    o.vm.network 'private_network', ip: '10.1.1.32'
    o.vm.network :forwarded_port, guest: 80, host: 8086
    o.vm.network :forwarded_port, guest: 22, host: 2226
    o.vm.provision :shell, inline: NODE_SCRIPT.dup
    set_hostname(o)
  end
  #DB Server
  config.vm.define 'node-db-server' do |p|
    p.vm.box = 'bento/centos-7.2'
    p.vm.hostname = 'db-server'
    p.vm.network 'private_network', ip: '10.1.1.33'
    p.vm.network :forwarded_port, guest: 80, host: 8088
    p.vm.network :forwarded_port, guest: 22, host: 2228
    p.vm.network :forwarded_port, guest: 3306, host: 3306
    p.vm.provision :shell, inline: NODE_SCRIPT.dup
    set_hostname(p)
  end
  #DB Slave
  config.vm.define 'node-db-slave' do |q|
    q.vm.box = 'bento/centos-7.2'
    q.vm.hostname = 'db-slave'
    q.vm.network 'private_network', ip: '10.1.1.34'
    q.vm.network :forwarded_port, guest: 80, host: 8090
    q.vm.network :forwarded_port, guest: 22, host: 2230
    q.vm.network :forwarded_port, guest: 3306, host: 3308
    q.vm.provision :shell, inline: NODE_SCRIPT.dup
    set_hostname(q)
  end
    #workstation
  config.vm.define 'node-work-station' do |s|
    s.vm.box = 'bento/centos-7.2'
    s.vm.hostname = 'work-station'
    s.vm.network 'private_network', ip: '10.1.1.36'
    s.vm.network :forwarded_port, guest: 80, host: 8094
    s.vm.network :forwarded_port, guest: 22, host: 2234
    s.vm.provision :shell, inline: NODE_SCRIPT.dup
    set_hostname(s)
  end

NODE_SCRIPT = <<EOF.freeze
echo "Preparing node..."

# ensure the time is up to date
yum -y install ntp
systemctl start ntpd
systemctl enable ntpd

echo "10.1.1.33 chef-server.test" | tee -a /etc/hosts
EOF

end

#Vagrant.configure(2) do |config1|
#  config1.ssh.private_key_path = "C:/Users/vishnuch/.vagrant.d/insecure_private_key"
#  config1.ssh.forward_agent = true
#  config1.ssh.insert_key = false
#  config1.ssh.username = "vagrant"
#  config1.ssh.password = "vagrant"
#  config1.memory = 1024
#  config1.cpus = 2
#  #chef Server
#  config.vm.define 'node-chef-server' do |r|
#    r.vm.box = 'bento/ubuntu-14.04'
#    r.vm.hostname = 'chef-server'
#    r.vm.network 'private_network', ip: '10.1.1.35'
#    r.vm.network :forwarded_port, guest: 80, host: 8092
#    r.vm.network :forwarded_port, guest: 22, host: 2232
#    r.vm.network :forwarded_port, guest: 443, host: 4431
#    r.vm.provision :shell, inline: CHEF_SERVER_SCRIPT.dup
#    set_hostname(r)
#  end
#
#CHEF_SERVER_SCRIPT = <<EOF.freeze
#apt-get update
#apt-get -y install curl
#
## ensure the time is up to date
#echo "Synchronizing time..."
#apt-get -y install ntp
#service ntp stop
#ntpdate -s time.nist.gov
#service ntp start
#
## download the Chef server package
#echo "Downloading the Chef server package..."
#if [ ! -f /downloads/chef-server-core_12.11.1_amd64.deb ]; then
#  wget -nv -P /downloads https://packages.chef.io/files/stable/chef-server/12.11.1/ubuntu/14.04/chef-server-core_12.11.1-1_amd64.deb
#fi
#
## install the package
#echo "Installing Chef server..."
#sudo dpkg -i /downloads/chef-server-core_12.11.1-1_amd64.deb
#
## reconfigure and restart services
#echo "Reconfiguring Chef server..."
#sudo chef-server-ctl reconfigure
#echo "Restarting Chef server..."
#sudo chef-server-ctl restart
#
## wait for services to be fully available
#echo "Waiting for services..."
#until (curl -D - http://localhost:8000/_status) | grep "200 OK"; do sleep 15s; done
#while (curl http://localhost:8000/_status) | grep "fail"; do sleep 15s; done
#
## create admin user
#echo "Creating a user and organization..."
#sudo chef-server-ctl user-create admin Govind Rajan admin@govind.com insecurepassword --filename admin.pem
#sudo chef-server-ctl org-create 4thcoffee "Fourth Coffee, Inc." --association_user admin --filename 4thcoffee-validator.pem
#
## copy admin RSA private key to share
#echo "Copying admin key to /vagrant/secrets..."
#mkdir -p /vagrant/secrets
#cp -f /home/vagrant/admin.pem /vagrant/secrets
#
#echo "Your Chef server is ready!"
#EOF
#
#
#end 
